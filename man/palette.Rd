% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/palette.R
\docType{data}
\name{hilighter_colors}
\alias{hilighter_colors}
\alias{gradient_colors}
\alias{view_colors}
\alias{assert_hex}
\alias{map_colors}
\title{Palettes and Palette Viewing}
\format{An object of class \code{character} of length 10.}
\usage{
hilighter_colors

gradient_colors(...)

view_colors(x = hilighter_colors)

assert_hex(x)

map_colors(list, colors = hilighter_colors)
}
\arguments{
\item{x}{A vector of colors (either R \code{colors()} or hexadecimal).}

\item{list}{A list of matches for a map.}

\item{colors}{A vector of colors.}
}
\value{
\code{view_colors} plots the colors as bars

\code{assert_hex} returns a vector of hexadecimal strings

\code{map_colors} returns a names list
}
\description{
\code{hilighter_colors} - A palette of 10 hilighter colors.

\code{gradient_colors} - A function to create a palette function of interpolated
colors.

\code{view_colors} - Plots vector of colors.

\code{assert_hex} - Convert colors to hexadecimal.

\code{map_colors} - Add colors to a list to make a named list which is a map.
}
\examples{
view_colors(hilighter_colors)
view_colors(c("#FFA500", "#B3B3B3", "#FFFF00", 'red', 'blue', 'black'))
view_colors(gradient_colors(sort(hilighter_colors))(25))
\dontrun{
view_colors(gradient_colors(RColorBrewer::brewer.pal(9, 'Set1'))(30))
}

\dontrun{
library(tidyverse)

map_hilight <- list(
    c('\\\\bwe(\\'[a-z]+)?\\\\b'),
    c('\\\\bhe(\\'[a-z]+)?\\\\b'),
    'you',
    '\\\\bi(?=($|\\\\s))'
) \%>\%
    map_colors()

set.seed(10)
presidential_debates_2012 \%>\%
    dplyr::filter(person \%in\% c('ROMNEY', 'OBAMA')) \%>\%
    dplyr::group_by(person) \%>\%
    dplyr::sample_n(15) \%$\%
    hilight_term(dialogue, map_hilight, list(person)) \%>\%
    plot()
}
}
\seealso{
\code{\link[grDevices]{colorRampPalette}}
}
\keyword{datasets}
